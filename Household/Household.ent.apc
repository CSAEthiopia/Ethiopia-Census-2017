{Application 'HOUSEHOLD' logic file generated by CSPro}
PROC GLOBAL

numeric i;
array string labels(30);
array numeric codes(30);
array numeric values(8);//this is aray declaration for remittance code
array string  cname(8);//this is country name serial code
// the function used to display error message using code 1000-1999 in english langage,Amrharic language 2000-2999 
//for other langages,English language
function getErrorCode(errCode) 
	if getlanguage()="ENG" then
      getErrorCode = errCode;
    elseif getlanguage()="AMH" then
      getErrorCode = errCode+1000;
    else 
    	getErrorCode = errCode;
     endif;
end;
PROC HOUSEHOLD_FF

PROC HOUSEHOLD_QUEST
preproc 
set behavior(END_HOUR,END_MINUTE )canenter(notappl) on (noconfirm);
//add the start time when the questionnaire is in add mode
numeric time=systime();
if demode()= add then
	START_HOUR = int(time /10000);
	START_MINUTE =int(time /100) % 100;
endif;

postproc
// add endtime if demode= add 
time =systime();
if demode()= add then
	END_HOUR = int(time /10000);
	END_MINUTE =int(time /100) % 100;
endif;

FINAL_RESULT=1;

// End entry and return to menu
// If we don't do this then we will start a new case in add mode
// with the same case IDs and we will get a duplicate case error.
stop(1);

PROC ID101
preproc
if sysparm("region")<> "" then

	$ = tonumber(sysparm("region"));
	
	set attributes($) protect;
	
	
endif;
PROC ID102
preproc
if sysparm("zone")<> "" then

	$ = tonumber(sysparm("zone"));
	
	set attributes($) protect;
	
	
endif;

PROC ID103
preproc
if sysparm("woreda")<> "" then

	$ = tonumber(sysparm("woreda"));
	
	set attributes($) protect;
	
	
endif;
PROC ID104
preproc
if sysparm("town")<> "" then

	$ = tonumber(sysparm("town"));
	
	set attributes($) protect;
	
	
endif;
PROC ID105
preproc
if sysparm("subcity")<> "" then

	$ = tonumber(sysparm("subcity"));
	
	set attributes($) protect;
	
	
endif;
PROC ID106
preproc
if sysparm("PSA")<> "" then

	$ = tonumber(sysparm("PSA"));
	
	set attributes($) protect;
	
	
endif;
PROC ID107
preproc
if sysparm("SA")<> "" then

	$ = tonumber(sysparm("SA"));
	
	set attributes($) protect;
	
	
endif;
PROC ID108
preproc
if sysparm("kebele")<> "" then

	$ = tonumber(sysparm("kebele"));
	
	set attributes($) protect;
	
	
endif;
PROC ID109
preproc
if sysparm("EA")<> "" then

	$ = tonumber(sysparm("EA"));
	
	set attributes($) protect;
	
	
endif;
PROC ID202
preproc
if sysparm("Housing SN")<> "" then

	$ = tonumber(sysparm("Housing SN"));
	
	set attributes($) protect;
	
	
endif;
PROC ID203
preproc
if sysparm("Household SN")<> "" then

	$ = tonumber(sysparm("Household SN"));
	
	set attributes($) protect;
	
	
endif;
PROC H201
preproc
if sysparm("woreda")<> "" then

	$ = tonumber(sysparm("woreda"));
	
	set attributes($) protect;
	
	
endif;

PROC FINAL_RESULT
// setting value sets to show continue interview option and removing option for completed
onfocus 
if visualvalue($) <> 1 then
	setvalueset(FINAL_RESULT,FINAL_RESULT_VS2);
else  
	setvalueset(FINAL_RESULT,FINAL_RESULT_VS1);
endif;
// if the final result is bewwen 2 to 5  end the quesionnaire 
postproc
if $ in 2:5 then
	endlevel;
else
 	setvalueset(FINAL_RESULT,FINAL_RESULT_VS1);
endif;
PROC P301
preproc
//initialize the line number
$=curocc();
PROC P302
postproc
// set occurance lables to show fill in the question text and lables in the tree
i=curocc();
string occurrenceLabel = strip($);
setocclabel(HOUSEHOLD_ROSTER(i),occurrenceLabel);
setocclabel(PERSON_DETAILS_ROSTER(i),occurrenceLabel);
setocclabel(DISABLITY_ROSTER(i),occurrenceLabel);
setocclabel(MIGRATION_ROSTER(i),occurrenceLabel);
setocclabel(MARITAL_STATUS_ROSTER(i),occurrenceLabel);
setocclabel(EDUCATION_ROSTER(i),occurrenceLabel);
setocclabel(ICT_USE_ROSTER(i),occurrenceLabel);
setocclabel(ECONOMIC_ROSTER(i),occurrenceLabel);
setocclabel(FERILITY_ROSTER(i),occurrenceLabel);
PROC P303
//If the person is visitor and living in Ethiopian ask region and zone 

//If the person residence status is in 1:3 category skip to relationship
if $ in 1:3 then 
  skip to P306;
elseif $=5 then
//if the person is visitor and living outside Ethiopia ask country code
  skip to P305;
endif;
PROC P304B
// this code changes the value set base on the region code
onfocus
  if P304A = 1 then
    setvalueset(P304B, P304B_VS1);
  elseif P304A = 2 then
    setvalueset(P304B, P304B_VS2);
  endif;
PROC P306
onfocus 
if curocc(HOUSEHOLD_ROSTER) <> 1 then
	setvalueset(P306,P306_VS2);
else  
	setvalueset(P306,P306_VS1);
endif;

postproc 
//The first person should be the head
if curocc()=1 and $<>1 then 
   errmsg(getErrorCode(1000)) select("Change person name",P302, "Change Relationship", $);
endif;
PROC P611
//if there are no more people end the roster
if $=2 then
	endgroup; 
endif;
PROC PERSON_DETAILS_ROSTER

PROC P309
preproc

//if we have enter information for  the individuals in the household end the group
if curocc()>totocc(HOUSEHOLD_ROSTER) then
	endgroup;
elseif P308(curocc())>=18 then // if age of the person is 18 and older put mother line=88
	$=88;
	noinput;
endif;

onfocus
// create mother line number value set
numeric nextEntryValueSet=1;
{Eligible mothers are females who are 10 and above old}
numeric motherIndex =seek(P307=2 and P308>=10);
//create value set for individual under 18
if  P308(curocc()) < 18 then
	while motherIndex do
	if curocc() <> P301(motherIndex) then
		codes(nextEntryValueSet)= P301(motherIndex);
		labels(nextEntryValueSet) = P302(motherIndex);		
		nextEntryValueSet= nextEntryValueSet+1;
	endif;
		 motherIndex =seek(P307=2 and P308>=10,motherIndex+1);
	enddo;
endif;
codes(nextEntryValueSet) = 88;
labels(nextEntryValueSet) = "Not applicable" ;
nextEntryValueSet= nextEntryValueSet+1;
codes(nextEntryValueSet) = notappl;
setvalueset(P309,codes,labels);



PROC P315A
preproc
//if we have entered all the diability information for  the individuals in the household end the group
if curocc()>totocc(HOUSEHOLD_ROSTER) then
	endgroup;
endif;
PROC P316
// if type of residence is home less or H201=8  accept the case after disiblity section
if H201=8 then 
   endlevel;
endif;   
PROC P317

preproc

//if we have enter information about migration for  the individuals in the household end the group
if curocc()>totocc(HOUSEHOLD_ROSTER) then
endgroup;
endif;
postproc
 // if a person lives since birth he/she skip to next person 
if $=99 then 
  skip to next P317;
endif;
 
PROC P319Z
// this code changes the value set base on the region code
onfocus
  if P319R = 1 then
    setvalueset(P319Z, P319Z_VS1);
  elseif P319R = 2 then
    setvalueset(P319Z, P319Z_VS2);
  endif;
PROC P321Z
// this code changes the value set base on the region code
onfocus
  if P321R = 1 then
    setvalueset(P321Z, P321Z_VS1);
  elseif P321R = 2 then
    setvalueset(P321Z, P321Z_VS2);
  endif;
PROC P324

preproc
i=curocc();
//if we have enter marital status for age 10 and above information for  the individuals in the household end the group
if curocc()>totocc(HOUSEHOLD_ROSTER) then
	endgroup;
elseif P308(i) <10 then  // if age of a person less than 10 skip to next person
  skip to next;
endif;
postproc 
// if current marital status is never married or don't know  skip to next person
if $ in 1,8 then 
 skip to next ;
endif;
PROC P401
preproc
i=curocc();
//if we have enter edcation information for age 3 above the individuals in the household end the group
if curocc()>totocc(HOUSEHOLD_ROSTER) then
   endgroup;
   elseif P308(i)<3 then // if the age of a person is less than 3 skip to next person
 skip to next ;
endif;
PROC P404
preproc
i=curocc();
if curocc()>totocc(HOUSEHOLD_ROSTER) then
   endgroup;
    elseif P308(i)<3 then // if the age of a person is less than 3 skip to next person
 skip to next ;
endif;
PROC P501
preproc
i=curocc();
if curocc()>totocc(HOUSEHOLD_ROSTER) then
    endgroup;
 elseif P308(i) <5 then // if aperson age is less than 5 years then skip to next person
    skip to next ;
endif;

postproc
// if a person engaged in 7 days (p501) in codes 1:4 skip to main occupation(p503)
if $ in 1:4 then
  skip to P503 
 endif;
PROC P502

// if availablity of work for a person during the comimg month is 3:12(P502) then skip to P506
if $ in 3:12 then
  skip to P506 
 endif;
PROC P601_MALE
preproc
i=curocc();
if curocc()>totocc(HOUSEHOLD_ROSTER) then
	endgroup;
elseif (P307(i)=2 and P308(i)<10) or P307(i)=1 then
	skip to next;
endif;
PROC P601_TOTAL
if $<> P601_MALE+P601_FEMALE then
	errmsg(getErrorCode(1001))select("Check number of male alive ",P601_MALE, "Check number of female alive", P601_FEMALE);
	

endif;
PROC P609

PROC P610
preproc 
i=curocc();
if P308(i)>49 then 
	skip to next ;
	
endif
PROC P701F
//if the number of death of male is blank make it zero
if special(P701M) then
P701M=0;
endif;
//if the number of death of female is blank make it zero
if special(P701F) then
P701F=0;
endif;


PROC P701T
// the sum of deaths in the houshold should be equal to male and female deaths in the houshold 
if $<>P701M+P701F then
 errmsg(getErrorCode(1002))select("Check number of male death ",P701M, "Check number of female death", P701F);
	 
 endif;
 // if the sum male number of female and male deathe equals to zero skip Death section 

 if $=0 then 
 	skip to R801A;
 endif;
PROC P702
preproc
//if you have enterd all the death information for death in the household then end the group
if curocc()>P701M+P701F then
endgroup;
endif;
PROC P706
// if the person is male or female age less than 12 or greater than 49 skip to next person
preproc
i=curocc();
if P703(i)=1 or (P703(i)=2 and (P704(i)<12 or P704(i)>49)) then
 	skip to next;
 	endif; 
PROC R801B

PROC R802
preproc
if R801A+R801B=0 then
 
 skip to H1;
 
 endif;
PROC R804
{onfocus// we need to discuss with subject matters abou thsi section in general
// create value set for country of origin    
numeric countryOriginValueSet=1;
numeric countryResidence=seek(R802);
//create value set for individual under 18
//if  P308(curocc()) < 18 then
	while countryResidence do
	if curocc() <> R802(countryResidence) then
		values(countryOriginValueSet)= R802(countryResidence);
		cname(countryOriginValueSet) = R801C(countryResidence);
		countryOriginValueSet= countryOriginValueSet+1;
	endif;
		 countryResidence =seek(R802,countryResidence+1);
	enddo;
//endif;
values(countryOriginValueSet) = 999;
cname(countryOriginValueSet) = "Not applicable" ;
countryOriginValueSet= countryOriginValueSet+1;
values(countryOriginValueSet) = notappl;
setvalueset(R804,values,cname);}


PROC H2
// if the housing type is differnen from  collected for unit end of the case
postproc
if $=2 then
	endlevel;
endif
