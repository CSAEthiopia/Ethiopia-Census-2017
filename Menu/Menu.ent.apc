{Application 'MENU' logic file generated by CSPro}
PROC GLOBAL
array codes(100);
array string labels(100); 
numeric totalStaff;
file pffFile;

//Generate the EA code
function string getEnumEACode()
    getEnumEACode = maketext("%02d%02d%02d%d%02d%02d%02d%03d%02d",
         SA_ID101,SA_ID102,SA_ID103,SA_ID104,SA_ID105,SA_ID106,
         SA_ID107,KEBELE_CODE,ENUMERATION_AREA_CODE);
end;

// Generate Listing file name from EA code and Staff code.
function string enumListingFileName()
	enumListingFileName = maketext("L%s_%010d.dat",getEnumEACode(),LOGIN);
end;

function string enumHouseholdFileName()
	enumHouseholdFileName = maketext("H%s_%010d.dat",getEnumEACode(),LOGIN);
end;
 
function launchListing()

	setfile(pffFile,"./listing.pff",create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 6.3");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description="); // empty description so doesn't show on tab
	filewrite(pffFile,"[DataEntryInit]");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","../Listing/Listing.ent");
	filewrite(pffFile,"InputData=../Data/%s",enumListingFileName());
	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"region=%d",SA_ID101);
	filewrite(pffFile,"zone=%d",SA_ID102);
	filewrite(pffFile,"woreda=%d",SA_ID103);
	filewrite(pffFile,"town=%d",SA_ID104);
	filewrite(pffFile,"subcity=%d",SA_ID105);
	filewrite(pffFile,"PSA=%d",SA_ID106);
	filewrite(pffFile,"SA=%d",SA_ID107);
	filewrite(pffFile,"kebele=%d",KEBELE_CODE);
	filewrite(pffFile,"EA=%d",ENUMERATION_AREA_CODE);		
	filewrite(pffFile,"Staff ID=%d",S_STAFF_ID);	
	close(pffFile);

	if execpff(filename(pffFile)) = 0 then
		errmsg("Fail to launch listing");
    endif;		
end;

function launchHHquest(husn,hhsn)
setfile(pffFile,"./Household.pff",create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 6.3");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description="); // empty description so doesn't show on tab
	filewrite(pffFile,"[DataEntryInit]");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%s","../Household/Household.ent");
	filewrite(pffFile,"InputData=../Data/%s",enumHouseholdFileName());
	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"region=%d",SA_ID101);
	filewrite(pffFile,"zone=%d",SA_ID102);
	filewrite(pffFile,"woreda=%d",SA_ID103);
	filewrite(pffFile,"town=%d",SA_ID104);
	filewrite(pffFile,"subcity=%d",SA_ID105);
	filewrite(pffFile,"PSA=%d",SA_ID106);
	filewrite(pffFile,"SA=%d",SA_ID107);
	filewrite(pffFile,"kebele=%d",KEBELE_CODE);
	filewrite(pffFile,"EA=%d",ENUMERATION_AREA_CODE);		
	filewrite(pffFile,"Staff ID=%d",S_STAFF_ID);	
	filewrite(pffFile,"Housing SN=%d",husn);		
	filewrite(pffFile,"Household SN=%d",hhsn);	
	close(pffFile);

	if execpff(filename(pffFile)) = 0 then
		errmsg("Fail to launch Household form");
    endif;		
   
end;

function syncSupervisor()
end;

function viewEnumeratorManual()
end;

function viewUserGuide()
end;

function viewSupervisorManual()
end;

function SyncWithEnumerator()
end;

function SyncWithHeadquarters()
end;

function summeryReport()
end;


PROC MENU_FF

PROC SETUP_CHECK
preproc
$ = 1; // must give a value since the field is protected

postproc
//This is for the first time setup.
//To write Staff ID(region,zone,wored, supervisio area) by the supervisor

//if no staff case exisits or supervision area is not set then go to initial setup form
if find(STAFF_DICT,>=,"") = 0 then
	move to INITIAL_SETUP_FORM;
endif;	
 
SUPERVISION_AREA_ID=1;
if loadcase(SUPERVISION_AREA_DICT, SUPERVISION_AREA_ID)=0 then
	move to INITIAL_SETUP_FORM;
endif;	
PROC LOGIN

//Dyanmically creates valueset from the staff file.
onfocus
numeric i=1;
locate(STAFF_DICT,>=,"");
while loadcase(STAFF_DICT) do
	codes(i)=S_STAFF_ID;
	labels(i)=S_NAME;
	i=i+1;
enddo;	
codes(i)=notappl;
setvalueset(LOGIN,codes,labels);

postproc
//To check the role of the staff chosen(supervisor/enumerator)
S_STAFF_ID=LOGIN;
loadcase(STAFF_DICT,S_STAFF_ID);
if S_ROLE=1 then //if enumerator
	move to KEBELE_CODE;
elseif S_ROLE=2 then //if supervisor
	move to SUPERVISON_AREA_CODE;
endif;
		
PROC ENUMERATION_AREA_CODE
//Verify whether the enumerator is assigned the EA chosen in the assignemt file.
A_ID108 = KEBELE_CODE;
A_ID109 = ENUMERATION_AREA_CODE;
//load all assignments for the enumerator
if loadcase(ASSIGNMENT_DICT,A_ID108,A_ID109)=0 then
	errmsg("Enumeration area is not assigned.");
	reenter LOGIN;
else
	//check if the EA is in the assignment
	if A_STAFF_ID <> LOGIN then
		errmsg("Enumeration area is not assigned to you.");
		reenter LOGIN;
			
	else
		move to ENUMERATOR_MAIN_MENU;
	endif;
endif;		
PROC SUPERVISON_AREA_CODE
//check whether the ID of the supervision area is the same as
//the one in the menu.
if SA_ID107=$ then
	move to SUPERVISOR_MAIN_MENU;
else
	errmsg("Invalid supervision area.");
	reenter LOGIN;
endif;	
PROC ENUMERATOR_MAIN_MENU

if $ = 1 then
	launchListing();
elseif $ = 2 then
	move to LAUNCH_HOUSEHOLD_QUESTIONNAIRE;
elseif $ = 3 then
	syncSupervisor();
elseif $ = 4 then
	move to VIEW_MANUALS;
elseif $ = 9 then
	stop(1);
endif;

reenter;
PROC SUPERVISOR_MAIN_MENU
onfocus
$ = notappl;
postproc
if $ = 1 then
	SyncWithEnumerator();
elseif $ = 2 then
	SyncWithHeadquarters();
elseif $ = 3 then
	summeryReport();
elseif $ = 4 then
	//Launch listing
elseif $ = 5 then
	//Launch HH questionaires
elseif $ = 6 then
	move to VIEW_MANUALS;
elseif $ = 7 then
	move to MANAGE_ENUMERATORS;
elseif $ = 8 then
	move to MANAGE_ASSIGNMENTS;
elseif $ = 9 then
	stop(1);
endif;

reenter;
PROC LAUNCH_HOUSEHOLD_QUESTIONNAIRE
onfocus
//Making dynamic value set from listing form.
string listingFileName = pathname(application) +
	maketext("..\Data\%s",enumListingFileName());
if setfile(LISTING_DICT, listingFileName) = 0 or locate(LISTING_DICT,>=,"") = 0 then
	errmsg("This EA has not yet been listed, please list it first.");
	close(LISTING_DICT);
	reenter ENUMERATOR_MAIN_MENU;
endif;
numeric i=1;
while loadcase(LISTING_DICT) do
	codes(i)=L10*1000+L13;
	labels(i)=maketext("HU %03d HH %03d: %s",L10,L13,strip(L14));
	i=i+1;
enddo;	
close(LISTING_DICT);
codes(i) = -1;
labels(i) = "Back to Main menu";
i = i+1;
codes(i)=notappl;
setvalueset($,codes,labels);

postproc
if $ = -1 then 
	reenter ENUMERATOR_MAIN_MENU;
endif;
//decompose housing and household serial number from dynamic value set
numeric husn =int($/1000);
numeric hhsn = $%1000;
launchHHquest(husn,hhsn);
PROC VIEW_MANUALS

if $ = 1 then
	viewEnumeratorManual();
elseif $ = 2 then
	viewUserGuide();
elseif $ = 3 then
	viewSupervisorManual();
elseif $ = 9 then
	// if user is enumerator then
	reenter ENUMERATOR_MAIN_MENU;
endif;

reenter;
PROC MANAGE_ENUMERATORS

//Dyanmically creates valueset from the staff file.
onfocus
numeric i=1;
codes(i)=-1;
labels(i)="Add new enumerator";
i=i+1;
locate(STAFF_DICT,>=,"");
while loadcase(STAFF_DICT) do
	if S_ROLE=1 then 
		codes(i)=S_STAFF_ID;
		labels(i)=S_NAME;
		i=i+1;
	endif;	
enddo;	
codes(i)=notappl;
setvalueset($,codes,labels);

totalStaff=i-2; //don't count "add new enumertor" or "notappl"

postproc
if $=-1 then 
	//to add new enumerator
	ENUMERATOR_NAME="";
else
	//modify exisiting enumerator name
	ENUMERATOR_NAME=getlabel($,$);
endif;	
			
move to ENUMERATOR_NAME;
PROC MANAGE_ASSIGNMENTS
//Load the EA dictionery then assign daynamic value set for assignement field
//if it find the label it gets the staff name else labeled as unassigned
onfocus
numeric i;

// Load all EAs in sup area
if loadcase(EA_CODE_DICT,SA_ID101,SA_ID102,SA_ID103,SA_ID104,SA_ID105,SA_ID106,SA_ID107)=0 then
	// No EAs, problem with EA file
   	errmsg("Please contact Headquarters");
    reenter SUPERVISOR_MAIN_MENU;
else
	// Add entry in value set for each EA
    do i = 1 while i <= count(EA_CODE_DICT.EA_CODE_REC) 
    	// Code is kebele code combined with EA code
		codes(i) = EA_ID108(i) * 100 + EA_ID109(i);
		
		// Check if EA assigned
		if loadcase(ASSIGNMENT_DICT,EA_ID108(i),EA_ID109(i)) = 0 then
			// unassigned 
			labels(i)=maketext("%03d%02d Unassigned",EA_ID108(i),EA_ID109(i));
		else
			// Find enumerator name from assignment
			loadcase(STAFF_DICT,A_STAFF_ID);
			labels(i)=maketext("%03d%02d (%s)",EA_ID108(i),EA_ID109(i),S_NAME);
	    endif;
     enddo;
     codes(i) = notappl;
endif;
setvalueset($,codes,labels);

postproc
//Set value of the next field to match the current assignemnt.
A_ID108 = int(MANAGE_ASSIGNMENTS/100);
A_ID109 = MANAGE_ASSIGNMENTS%100;
if loadcase(ASSIGNMENT_DICT,A_ID108,A_ID109) = 1 then
	ASSIGN_ENUMERATORS = A_STAFF_ID;
else
	ASSIGN_ENUMERATORS = notappl;
endif;
PROC ASSIGN_ENUMERATORS
onfocus
numeric i=1;
locate(STAFF_DICT,>=,"");
while loadcase(STAFF_DICT) do
	if S_ROLE=1 then 
		codes(i)=S_STAFF_ID;
		labels(i)=S_NAME;
		i=i+1;
	endif;	
enddo;
codes(i)=-1;
labels(i)="Back";	
i=i+1;
codes(i)=notappl;
setvalueset($,codes,labels);
postproc
if ASSIGN_ENUMERATORS <> -1 then 
	//Update assignment file
	A_ID108 = int(MANAGE_ASSIGNMENTS/100);
	A_ID109 = MANAGE_ASSIGNMENTS%100;
	A_STAFF_ID = ASSIGN_ENUMERATORS;
	writecase(ASSIGNMENT_DICT);
endif;
reenter MANAGE_ASSIGNMENTS;
PROC ENUMERATOR_NAME
if ENUMERATOR_NAME="" then
	errmsg("Please enter enumerator name.");
	reenter ENUMERATOR_NAME;
	
endif;	
if MANAGE_ENUMERATORS=-1 then 
	//to add new enumerator
	S_NAME=ENUMERATOR_NAME;
	S_ROLE=1;
	S_STAFF_ID=tonumber(maketext("%02d%02d%02d%02d%02d",
		   SA_ID101,SA_ID102,SA_ID103,SA_ID107,totalStaff+1));
	writecase(STAFF_DICT);
	
else
	//modify exisiting enumerator name
	S_STAFF_ID=MANAGE_ENUMERATORS;
	loadcase(STAFF_DICT,S_STAFF_ID);
	S_NAME=ENUMERATOR_NAME;
	writecase(STAFF_DICT);
endif;	
			
reenter MANAGE_ENUMERATORS;
PROC M_SA_ID107
//Check whether the EA code match with the EA file.
if loadcase(EA_CODE_DICT,M_SA_ID101,M_SA_ID102,M_SA_ID103,M_SA_ID104,M_SA_ID105,M_SA_ID106,M_SA_ID107)=0 then
	errmsg("Invalid Enumeration area code");
    reenter M_SA_ID101;
endif;

//Writting supervisor on the staff file
S_ROLE=2;
S_STAFF_ID=tonumber(maketext("%02d%02d%02d%02d00",
		   M_SA_ID101,M_SA_ID102,M_SA_ID103,M_SA_ID107));
S_NAME = M_SUPERVISOR_NAME;
if writecase(STAFF_DICT)=0 then
		errmsg("Please contact Headquarters");
		stop(1);
endif;

//save supervision area to the supervision area file.		
SUPERVISION_AREA_ID=1;
SA_ID101=M_SA_ID101;
SA_ID102=M_SA_ID102;
SA_ID103=M_SA_ID103;
SA_ID104=M_SA_ID104;
SA_ID105=M_SA_ID105;
SA_ID106=M_SA_ID106;
SA_ID107=M_SA_ID107;
if writecase(SUPERVISION_AREA_DICT)=0 then
	errmsg("Please contact Headquarters");
	stop(1);
endif;	

reenter MENU_QUEST_FORM;
